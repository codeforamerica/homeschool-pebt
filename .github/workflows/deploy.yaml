name: Deploy to Aptible

on:
  workflow_run:
    workflows: ["Run tests"]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'demo'
        type: choice
        options:
          - demo
          - production

env:
  USERNAME: ${{ secrets.GPR_USER }}
  TOKEN: ${{ secrets.GPR_KEY }}

jobs:
  deploy:
    name: Deploy to Aptible - ${{ github.event.inputs.environment || 'demo' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'demo' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: ${{ secrets.APTIBLE_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.APTIBLE_KNOWN_HOSTS }}
      - name: Initialize Git, Aptible, and Slack deploy message
        run: |
          ssh-keyscan beta.aptible.com >> ~/.ssh/known_hosts
          git remote add aptible ${{ vars.APTIBLE_REMOTE_URL }}
          wget --quiet -O aptible-package https://omnibus-aptible-toolbelt.s3.amazonaws.com/aptible/omnibus-aptible-toolbelt/master/206/pkg/aptible-toolbelt_0.16.5%2B20200508143656~ubuntu.16.04-1_amd64.deb
          sudo dpkg -i aptible-package
          aptible login --email=${{ secrets.APTIBLE_USERNAME }} --password=${{ secrets.APTIBLE_PASSWORD}}
      - name: Prepare Slack message
        id: slack-message
        continue-on-error: true
        run: |
          APTIBLE_OUTPUT_FORMAT=json aptible services --app ${{ vars.APTIBLE_APP_NAME }} | \
            jq -r '.[0].app.last_deploy_operation.git_ref' > .last-deploy-sha
          echo "last_deploy_sha=$(git rev-parse --short $(cat .last-deploy-sha))" >> "$GITHUB_ENV"
          
          cat <<EOF > .deploy-message
          :rocket: ${{ github.actor }} <${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}|is deploying> \`$(git rev-parse --short ${GITHUB_SHA})\` to ${{ github.event.inputs.environment || 'demo' }}
          \`\`\`
          $(GIT_PAGER= git log --no-decorate --oneline $(cat .last-deploy-sha)..${GITHUB_SHA})
          \`\`\`
          View diff on Github: https://github.com/${GITHUB_REPOSITORY}/compare/$(git rev-parse --short $(cat .last-deploy-sha))...$(git rev-parse --short ${GITHUB_SHA})
          EOF
          echo "deploy_message<<EOF" >> "$GITHUB_ENV"
          cat .deploy-message | tee -a "$GITHUB_ENV"
          echo "EOF" >> "$GITHUB_ENV"
      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        if: steps.slack-message.outcome == 'success'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ vars.SLACK_NOTIFY_CHANNEL_ID }}
          payload: |
            {"text":"", "attachments": [{ "text": ${{toJSON(env.deploy_message)}} }]}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Push to Aptible remote branch
        run: |
          git push --force ${{ vars.APTIBLE_REMOTE_URL }} ${GITHUB_SHA}:${{ vars.APTIBLE_REMOTE_BRANCH }}
      - name: Set Aptible environment variables and deploy
        run: |
          aptible deploy --app ${{ vars.APTIBLE_APP_NAME }} --git-commitish ${GITHUB_SHA} \
          'SPRING_PROFILES_ACTIVE=${{ vars.SPRING_PROFILES_ACTIVE}}' \
          'SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}' \
          'AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}' \
          'AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}' \
          'AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}' \
          'SMARTY_AUTH_ID=${{ secrets.SMARTY_AUTH_ID }}' \
          'SMARTY_AUTH_TOKEN=${{ secrets.SMARTY_AUTH_TOKEN }}' \
          'SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}' \
          'SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}' \
          'MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}' \
          'MAILGUN_DOMAIN=${{ vars.MAILGUN_DOMAIN }}' \
          'DISABLE_APPLICATIONS=${{ vars.DISABLE_APPLICATIONS }}' \
          'SENTRY_DSN=${{ secrets.SENTRY_DSN }}' \
          'FORCE_SSL=${{ vars.FORCE_SSL }}' \
          'RELEASE_HEALTHCHECK_TIMEOUT=${{ vars.RELEASE_HEALTHCHECK_TIMEOUT }}' \
          'TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}' \
          'TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}' \
          'TWILIO_MESSAGING_SERVICE_SID=${{ secrets.TWILIO_MESSAGING_SERVICE_SID }}' \
      - name: Announce Deploy Success
        id: slack-success
        if: success() && steps.slack.outcome == 'success'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: ${{ vars.SLACK_NOTIFY_CHANNEL_ID }}
          payload: |
            {"text":"", "attachments": [{"text": ${{toJSON(env.deploy_message)}}, "color": "#7CD197"}]}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Announce Deploy Failure
        id: slack-failure
        if: failure() && steps.slack.outcome == 'success'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: ${{ vars.SLACK_NOTIFY_CHANNEL_ID }}
          payload: |
            {"text":"", "attachments": [{"text": ${{toJSON(env.deploy_message)}}, "color": "#D64733"}]}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
